// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// parse_array_definition
List parse_array_definition(std::string x);
RcppExport SEXP lookup_parse_array_definition(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(parse_array_definition(x));
    return rcpp_result_gen;
END_RCPP
}
// find_function_end
int find_function_end(const CharacterVector& x, int start);
RcppExport SEXP lookup_find_function_end(SEXP xSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(find_function_end(x, start));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"lookup_parse_array_definition", (DL_FUNC) &lookup_parse_array_definition, 1},
    {"lookup_find_function_end", (DL_FUNC) &lookup_find_function_end, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_lookup(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
